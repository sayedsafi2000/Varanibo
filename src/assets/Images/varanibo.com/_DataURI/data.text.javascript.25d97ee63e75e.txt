data:text/javascript;base64,KGZ1bmN0aW9uKCl7ZnVuY3Rpb24gQShiLGEpe20uYXBwbHkodGhpcyxhcmd1bWVudHMpO3RyeXtpZihyLnRlc3QoYSkpe3ZhciBjPXRoaXMudXBsb2FkLl9faWRtX3JlcWlkX189InhycS0iK3QrIi0iKyArK3Y7dGhpcy5hZGRFdmVudExpc3RlbmVyKCJsb2FkZW5kIixCLmJpbmQodGhpcyxjKSl9fWNhdGNoKGQpe319ZnVuY3Rpb24gQyhiLGEpe3RyeXt0aGlzLnVwbG9hZC5fX2lkbV9yZXFpZF9fJiYiYWNjZXB0Ij09Yi50b0xvd2VyQ2FzZSgpJiYodGhpcy51cGxvYWQuX19pZG1fYWNjZXB0X189ITApfWNhdGNoKGMpe31rLmFwcGx5KHRoaXMsYXJndW1lbnRzKX1mdW5jdGlvbiBEKGIpe3RyeXt2YXIgYT10aGlzLnVwbG9hZCxjPWEuX19pZG1fcmVxaWRfXztpZihjKXt2YXIgZD1hLl9faWRtX2FjY2VwdF9fO2RlbGV0ZSBhLl9faWRtX2FjY2VwdF9fO2RlbGV0ZSBhLl9faWRtX3JlcWlkX187ZHx8ay5jYWxsKHRoaXMsImFjY2VwdCIsIiovKiIpO2suY2FsbCh0aGlzLCJhY2NlcHQiLAoiYXBwbGljYXRpb24vdm5kLnQxYy4iK2MpfX1jYXRjaChlKXt9bi5hcHBseSh0aGlzLGFyZ3VtZW50cyl9ZnVuY3Rpb24gQihiKXt0cnl7aWYoYil7dmFyIGE9dGhpcy5yZXNwb25zZVRleHQsYz11LmV4ZWMoYSk7cShbMTIyOTIxMjk3OSxiLGMmJihjWzFdfHxhKXx8bnVsbF0sIi8iKX19Y2F0Y2goZCl7fX1mdW5jdGlvbiBFKGIsYSl7dmFyIGMsZCxlPXcoYik7dHJ5e2lmKGM9ci50ZXN0KGU/Yi51cmw6Yikpe2U/ZD1iLmhlYWRlcnM6YT9kPWEuaGVhZGVyc3x8KGEuaGVhZGVycz1uZXcgSGVhZGVycyk6YT1hcmd1bWVudHNbMV09e2hlYWRlcnM6ZD1uZXcgSGVhZGVyc307dmFyIGY9ImZycS0iK3QrIi0iKyArK3Y7ZC5oYXMoImFjY2VwdCIpfHxkLmFwcGVuZCgiYWNjZXB0IiwiKi8qIik7ZC5hcHBlbmQoImFjY2VwdCIsImFwcGxpY2F0aW9uL3ZuZC50MWMuIitmKX19Y2F0Y2goZyl7fWQ9cC5hcHBseSh0aGlzLGFyZ3VtZW50cyk7dHJ5e2lmKGMpcmV0dXJuIGQudGhlbihGLmJpbmQodGhpcywKZikpfWNhdGNoKGcpe31yZXR1cm4gZH1mdW5jdGlvbiBGKGIsYSl7dHJ5e2lmKGIpaWYoYS5vayl7dmFyIGM9YS50ZXh0LGQ9YS5qc29uO2EudGV4dD1mdW5jdGlvbigpe3JldHVybiBjLmNhbGwodGhpcykudGhlbih4LmJpbmQodGhpcyxiLCExKSl9O2EuanNvbj1mdW5jdGlvbigpe3JldHVybiBkLmNhbGwodGhpcykudGhlbih4LmJpbmQodGhpcyxiLCEwKSl9fWVsc2UgcShbMTIyOTIxMjk3OSxiXSwiLyIpfWNhdGNoKGUpe31yZXR1cm4gYX1mdW5jdGlvbiB4KGIsYSxjKXt0cnl7dmFyIGQ9YT9KU09OLnN0cmluZ2lmeShjKTpjLGU9dS5leGVjKGQpO3EoWzEyMjkyMTI5NzksYixlJiYoZVsxXXx8ZCl8fG51bGxdLCIvIil9Y2F0Y2goZil7fXJldHVybiBjfWZ1bmN0aW9uIHkoYixhKXt2YXIgYz1iO2E9YS5zcGxpdCgiLiIpO2lmKCIqIj09YVswXSl7YS5zaGlmdCgpO2Zvcih2YXIgZCBvZiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyhiKSl0cnl7aWYodyhjPWJbZF0pJiZHKGMsCmFbMF0pKXtmb3IodmFyIGUgb2YgYSljPWNbZV07cmV0dXJuIGN9fWNhdGNoKGYpe319ZWxzZSB0cnl7Zm9yKGUgb2YgYSljPWNbZV07cmV0dXJuIGN9Y2F0Y2goZil7fX1mdW5jdGlvbiB6KGIsYSl7Zm9yKDtiJiZhLS07Yj1iLnBhcmVudEVsZW1lbnQpO3JldHVybiBifWNvbnN0IEg9d2luZG93Lm9yaWdpbnx8ZG9jdW1lbnQub3JpZ2lufHxsb2NhdGlvbi5vcmlnaW4sdz1PYmplY3QuaXNFeHRlbnNpYmxlLEk9QXJyYXkuaXNBcnJheSxoPVhNTEh0dHBSZXF1ZXN0LnByb3RvdHlwZSxxPXdpbmRvdy5wb3N0TWVzc2FnZS5iaW5kKHdpbmRvdyk7dmFyIHY9MCx0PTAscix1LG0sbixrLHA7Y29uc3QgRz1PYmplY3QuYXx8RnVuY3Rpb24uY2FsbC5iaW5kKE9iamVjdC5oYXNPd25Qcm9wZXJ0eSksSj0vICpcJChbPD49XSkgKi87d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoIm1lc3NhZ2UiLGZ1bmN0aW9uKGIpe3ZhciBhPWIuZGF0YTtpZihJKGEpJiZiLm9yaWdpbj09SClzd2l0Y2goYVswXSl7Y2FzZSAxMjI5MjEyOTc4OnQ9CmFbMV07dmFyIGM9YVsyXSxkPWFbM10sZT1hWzRdO2E9YVs1XTtlPyhyPVJlZ0V4cChlKSx1PVJlZ0V4cChhKSk6Yz1kPSExO3RyeXtjPyhtfHwobT1oLm9wZW4saC5vcGVuPUEpLG58fChuPWguc2VuZCxoLnNlbmQ9RCksa3x8KGs9aC5zZXRSZXF1ZXN0SGVhZGVyLGguc2V0UmVxdWVzdEhlYWRlcj1DKSk6KG0mJihoLm9wZW49bSxtPW51bGwpLG4mJihoLnNlbmQ9bixuPW51bGwpLGsmJihoLnNldFJlcXVlc3RIZWFkZXI9ayxrPW51bGwpKSxkP3B8fChwPWZldGNoLGZldGNoPUUpOnAmJihmZXRjaD1wLHA9bnVsbCl9Y2F0Y2goSyl7fWJyZWFrO2Nhc2UgMTIyOTIxMjk4MDpiPWFbMV07YT1hWzJdO3RyeXt2YXIgZj1kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbX19pZG1faWRfXz0iJytiKyciXScpO2lmKGYpYTppZihkPWEuc3BsaXQoSiksMTxkLmxlbmd0aCl7Zm9yKGQuc2hpZnQoKTtmJiYoZT1kLnNoaWZ0KCkpOyl7dmFyIGc9ZC5zaGlmdCgpLnRyaW0oKSxsO2ZvcihsPTE7IjwiPT0KZ1tnLmxlbmd0aC1sXTtsKyspOy0tbCYmKGc9Zy5zbGljZSgwLC1sKS50cmltKCkpO3N3aXRjaChlKXtjYXNlICI8IjpmPXooZz9mLmNsb3Nlc3QoZyk6ZixsKTticmVhaztjYXNlICI+IjpmPXooZi5xdWVyeVNlbGVjdG9yKGcpLGwpO2JyZWFrO2Nhc2UgIj0iOmlmKGc9eShmLGcpLHZvaWQgMCE9PWcpe2M9ZzticmVhayBhfX19Yz12b2lkIDB9ZWxzZSBjPXkoZixhKX1jYXRjaChLKXt9cShbMTIyOTIxMjk4MSxiLGNdLCIvIil9fSwhMSk7cShbMTIyOTIxMjk3N10sIi8iKX0pKCk7Cg==